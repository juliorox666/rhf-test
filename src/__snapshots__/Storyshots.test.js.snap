// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Example/Button Large 1`] = `
<button
  className="storybook-button storybook-button--large storybook-button--secondary"
  style={
    Object {
      "backgroundColor": undefined,
    }
  }
  type="button"
>
  Button
</button>
`;

exports[`Storyshots Example/Button Primary 1`] = `
<button
  className="storybook-button storybook-button--medium storybook-button--primary"
  style={
    Object {
      "backgroundColor": undefined,
    }
  }
  type="button"
>
  Button
</button>
`;

exports[`Storyshots Example/Button Secondary 1`] = `
<button
  className="storybook-button storybook-button--medium storybook-button--secondary"
  style={
    Object {
      "backgroundColor": undefined,
    }
  }
  type="button"
>
  Button
</button>
`;

exports[`Storyshots Example/Button Small 1`] = `
<button
  className="storybook-button storybook-button--small storybook-button--secondary"
  style={
    Object {
      "backgroundColor": undefined,
    }
  }
  type="button"
>
  Button
</button>
`;

exports[`Storyshots Example/Header Logged In 1`] = `
<header>
  <div
    className="wrapper"
  >
    <div>
      <svg
        height="32"
        viewBox="0 0 32 32"
        width="32"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
            fill="#FFF"
          />
          <path
            d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
            fill="#555AB9"
          />
          <path
            d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
            fill="#91BAF8"
          />
        </g>
      </svg>
      <h1>
        Acme
      </h1>
    </div>
    <div>
      <button
        className="storybook-button storybook-button--small storybook-button--secondary"
        style={
          Object {
            "backgroundColor": undefined,
          }
        }
        type="button"
      >
        Log out
      </button>
    </div>
  </div>
</header>
`;

exports[`Storyshots Example/Header Logged Out 1`] = `
<header>
  <div
    className="wrapper"
  >
    <div>
      <svg
        height="32"
        viewBox="0 0 32 32"
        width="32"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
            fill="#FFF"
          />
          <path
            d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
            fill="#555AB9"
          />
          <path
            d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
            fill="#91BAF8"
          />
        </g>
      </svg>
      <h1>
        Acme
      </h1>
    </div>
    <div>
      <button
        className="storybook-button storybook-button--small storybook-button--secondary"
        style={
          Object {
            "backgroundColor": undefined,
          }
        }
        type="button"
      >
        Log in
      </button>
      <button
        className="storybook-button storybook-button--small storybook-button--primary"
        style={
          Object {
            "backgroundColor": undefined,
          }
        }
        type="button"
      >
        Sign up
      </button>
    </div>
  </div>
</header>
`;

exports[`Storyshots Example/Page Logged In 1`] = `
<article>
  <header>
    <div
      className="wrapper"
    >
      <div>
        <svg
          height="32"
          viewBox="0 0 32 32"
          width="32"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g
            fill="none"
            fillRule="evenodd"
          >
            <path
              d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
              fill="#FFF"
            />
            <path
              d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
              fill="#555AB9"
            />
            <path
              d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
              fill="#91BAF8"
            />
          </g>
        </svg>
        <h1>
          Acme
        </h1>
      </div>
      <div>
        <button
          className="storybook-button storybook-button--small storybook-button--secondary"
          style={
            Object {
              "backgroundColor": undefined,
            }
          }
          type="button"
        >
          Log out
        </button>
      </div>
    </div>
  </header>
  <section>
    <h2>
      Pages in Storybook
    </h2>
    <p>
      We recommend building UIs with a
       
      <a
        href="https://componentdriven.org"
        rel="noopener noreferrer"
        target="_blank"
      >
        <strong>
          component-driven
        </strong>
      </a>
       
      process starting with atomic components and ending with pages.
    </p>
    <p>
      Render pages with mock data. This makes it easy to build and review page states without needing to navigate to them in your app. Here are some handy patterns for managing page data in Storybook:
    </p>
    <ul>
      <li>
        Use a higher-level connected component. Storybook helps you compose such data from the "args" of child component stories
      </li>
      <li>
        Assemble data in the page component from your services. You can mock these services out using Storybook.
      </li>
    </ul>
    <p>
      Get a guided tutorial on component-driven development at
       
      <a
        href="https://www.learnstorybook.com"
        rel="noopener noreferrer"
        target="_blank"
      >
        Learn Storybook
      </a>
      . Read more in the
       
      <a
        href="https://storybook.js.org/docs"
        rel="noopener noreferrer"
        target="_blank"
      >
        docs
      </a>
      .
    </p>
    <div
      className="tip-wrapper"
    >
      <span
        className="tip"
      >
        Tip
      </span>
       Adjust the width of the canvas with the
       
      <svg
        height="10"
        viewBox="0 0 12 12"
        width="10"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z"
            fill="#999"
            id="a"
          />
        </g>
      </svg>
      Viewports addon in the toolbar
    </div>
  </section>
</article>
`;

exports[`Storyshots Example/Page Logged Out 1`] = `
<article>
  <header>
    <div
      className="wrapper"
    >
      <div>
        <svg
          height="32"
          viewBox="0 0 32 32"
          width="32"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g
            fill="none"
            fillRule="evenodd"
          >
            <path
              d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
              fill="#FFF"
            />
            <path
              d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
              fill="#555AB9"
            />
            <path
              d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
              fill="#91BAF8"
            />
          </g>
        </svg>
        <h1>
          Acme
        </h1>
      </div>
      <div>
        <button
          className="storybook-button storybook-button--small storybook-button--secondary"
          style={
            Object {
              "backgroundColor": undefined,
            }
          }
          type="button"
        >
          Log in
        </button>
        <button
          className="storybook-button storybook-button--small storybook-button--primary"
          style={
            Object {
              "backgroundColor": undefined,
            }
          }
          type="button"
        >
          Sign up
        </button>
      </div>
    </div>
  </header>
  <section>
    <h2>
      Pages in Storybook
    </h2>
    <p>
      We recommend building UIs with a
       
      <a
        href="https://componentdriven.org"
        rel="noopener noreferrer"
        target="_blank"
      >
        <strong>
          component-driven
        </strong>
      </a>
       
      process starting with atomic components and ending with pages.
    </p>
    <p>
      Render pages with mock data. This makes it easy to build and review page states without needing to navigate to them in your app. Here are some handy patterns for managing page data in Storybook:
    </p>
    <ul>
      <li>
        Use a higher-level connected component. Storybook helps you compose such data from the "args" of child component stories
      </li>
      <li>
        Assemble data in the page component from your services. You can mock these services out using Storybook.
      </li>
    </ul>
    <p>
      Get a guided tutorial on component-driven development at
       
      <a
        href="https://www.learnstorybook.com"
        rel="noopener noreferrer"
        target="_blank"
      >
        Learn Storybook
      </a>
      . Read more in the
       
      <a
        href="https://storybook.js.org/docs"
        rel="noopener noreferrer"
        target="_blank"
      >
        docs
      </a>
      .
    </p>
    <div
      className="tip-wrapper"
    >
      <span
        className="tip"
      >
        Tip
      </span>
       Adjust the width of the canvas with the
       
      <svg
        height="10"
        viewBox="0 0 12 12"
        width="10"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z"
            fill="#999"
            id="a"
          />
        </g>
      </svg>
      Viewports addon in the toolbar
    </div>
  </section>
</article>
`;

exports[`Storyshots MyForm My Form Primary 1`] = `
<div
  className="my-form"
>
  <pre>
    <code />
  </pre>
  <div
    className="my-form__message"
  />
  <div
    className="my-form__title"
  >
    📝 Register Form
  </div>
  <div
    className="my-form__box"
  >
    <form
      className="form-data"
      onSubmit={[Function]}
    >
      <div
        className="form-data__label"
      >
        <div
          className="MuiFormControl-root MuiTextField-root WithStyles(ForwardRef(TextField))-root-1"
        >
          <label
            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
            data-shrink={false}
            htmlFor="firstName"
            id="firstName-label"
          >
            First name
          </label>
          <div
            className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
            onClick={[Function]}
          >
            <input
              aria-invalid={false}
              autoFocus={false}
              className="MuiInputBase-input MuiOutlinedInput-input"
              data-testid="firstName"
              disabled={false}
              id="firstName"
              name="firstName"
              onAnimationStart={[Function]}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              required={false}
              type="text"
            />
            <fieldset
              aria-hidden={true}
              className="PrivateNotchedOutline-root-2 MuiOutlinedInput-notchedOutline"
            >
              <legend
                className="PrivateNotchedOutline-legendLabelled-4"
              >
                <span>
                  First name
                </span>
              </legend>
            </fieldset>
          </div>
          
        </div>
      </div>
      <div
        className="form-data__label"
      >
        <div
          className="MuiFormControl-root MuiTextField-root WithStyles(ForwardRef(TextField))-root-1"
        >
          <label
            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
            data-shrink={false}
            htmlFor="lastName"
            id="lastName-label"
          >
            Last name
          </label>
          <div
            className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
            onClick={[Function]}
          >
            <input
              aria-invalid={false}
              autoFocus={false}
              className="MuiInputBase-input MuiOutlinedInput-input"
              data-testid="lastName"
              disabled={false}
              id="lastName"
              name="lastName"
              onAnimationStart={[Function]}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              required={false}
              type="text"
            />
            <fieldset
              aria-hidden={true}
              className="PrivateNotchedOutline-root-2 MuiOutlinedInput-notchedOutline"
            >
              <legend
                className="PrivateNotchedOutline-legendLabelled-4"
              >
                <span>
                  Last name
                </span>
              </legend>
            </fieldset>
          </div>
          
        </div>
      </div>
      <div
        className="form-data__label"
      >
        <div
          className="MuiFormControl-root MuiTextField-root WithStyles(ForwardRef(TextField))-root-1"
        >
          <label
            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
            data-shrink={false}
            htmlFor="phone"
            id="phone-label"
          >
            Phone
          </label>
          <div
            className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
            onClick={[Function]}
          >
            <input
              aria-invalid={false}
              autoFocus={false}
              className="MuiInputBase-input MuiOutlinedInput-input"
              data-testid="phone"
              disabled={false}
              id="phone"
              name="phone"
              onAnimationStart={[Function]}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              required={false}
              type="text"
            />
            <fieldset
              aria-hidden={true}
              className="PrivateNotchedOutline-root-2 MuiOutlinedInput-notchedOutline"
            >
              <legend
                className="PrivateNotchedOutline-legendLabelled-4"
              >
                <span>
                  Phone
                </span>
              </legend>
            </fieldset>
          </div>
          
        </div>
      </div>
      <div
        className="form-data__label"
      >
        <div
          className="MuiFormControl-root MuiTextField-root WithStyles(ForwardRef(TextField))-root-1"
        >
          <label
            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
            data-shrink={false}
            htmlFor="email"
            id="email-label"
          >
            Email
          </label>
          <div
            className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
            onClick={[Function]}
          >
            <input
              aria-invalid={false}
              autoFocus={false}
              className="MuiInputBase-input MuiOutlinedInput-input"
              data-testid="email"
              disabled={false}
              id="email"
              name="email"
              onAnimationStart={[Function]}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              required={false}
              type="text"
            />
            <fieldset
              aria-hidden={true}
              className="PrivateNotchedOutline-root-2 MuiOutlinedInput-notchedOutline"
            >
              <legend
                className="PrivateNotchedOutline-legendLabelled-4"
              >
                <span>
                  Email
                </span>
              </legend>
            </fieldset>
          </div>
          
        </div>
      </div>
      <div
        className="form-data__label"
      >
        <select
          className="form-data__label select-component "
          data-testid="gender"
          name="gender"
        >
          <option
            value=""
          >
            - SELECT ONE -
          </option>
          <option
            value="male"
          >
            Male
          </option>
          <option
            value="female"
          >
            Female
          </option>
          <option
            value="other"
          >
            Other
          </option>
        </select>
      </div>
      <div
        className="form-data__label"
      />
      <div
        className="form-data__submit submit"
      >
        <input
          className="submit__button"
          data-testid="submit"
          disabled={true}
          id="submit"
          type="submit"
          value="Submit"
        />
      </div>
    </form>
  </div>
</div>
`;

exports[`Storyshots MyForm My Form Second Version 1`] = `
<div
  className="my-form"
>
  <pre>
    <code />
  </pre>
  <div
    className="my-form__message"
  />
  <div
    className="my-form__title"
  >
    📝 Register Form
  </div>
  <div
    className="my-form__box"
  >
    <form
      className="form-data"
      onSubmit={[Function]}
    >
      <div
        className="form-data__label"
      >
        <div
          className="MuiFormControl-root MuiTextField-root WithStyles(ForwardRef(TextField))-root-6"
        >
          <label
            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
            data-shrink={false}
            htmlFor="firstName"
            id="firstName-label"
          >
            First name
          </label>
          <div
            className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
            onClick={[Function]}
          >
            <input
              aria-invalid={false}
              autoFocus={false}
              className="MuiInputBase-input MuiOutlinedInput-input"
              data-testid="firstName"
              disabled={false}
              id="firstName"
              name="firstName"
              onAnimationStart={[Function]}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              required={false}
              type="text"
            />
            <fieldset
              aria-hidden={true}
              className="PrivateNotchedOutline-root-7 MuiOutlinedInput-notchedOutline"
            >
              <legend
                className="PrivateNotchedOutline-legendLabelled-9"
              >
                <span>
                  First name
                </span>
              </legend>
            </fieldset>
          </div>
          
        </div>
      </div>
      <div
        className="form-data__label"
      >
        <div
          className="MuiFormControl-root MuiTextField-root WithStyles(ForwardRef(TextField))-root-6"
        >
          <label
            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
            data-shrink={false}
            htmlFor="lastName"
            id="lastName-label"
          >
            Last name
          </label>
          <div
            className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
            onClick={[Function]}
          >
            <input
              aria-invalid={false}
              autoFocus={false}
              className="MuiInputBase-input MuiOutlinedInput-input"
              data-testid="lastName"
              disabled={false}
              id="lastName"
              name="lastName"
              onAnimationStart={[Function]}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              required={false}
              type="text"
            />
            <fieldset
              aria-hidden={true}
              className="PrivateNotchedOutline-root-7 MuiOutlinedInput-notchedOutline"
            >
              <legend
                className="PrivateNotchedOutline-legendLabelled-9"
              >
                <span>
                  Last name
                </span>
              </legend>
            </fieldset>
          </div>
          
        </div>
      </div>
      <div
        className="form-data__label"
      >
        <div
          className="MuiFormControl-root MuiTextField-root WithStyles(ForwardRef(TextField))-root-6"
        >
          <label
            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
            data-shrink={false}
            htmlFor="phone"
            id="phone-label"
          >
            Phone
          </label>
          <div
            className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
            onClick={[Function]}
          >
            <input
              aria-invalid={false}
              autoFocus={false}
              className="MuiInputBase-input MuiOutlinedInput-input"
              data-testid="phone"
              disabled={false}
              id="phone"
              name="phone"
              onAnimationStart={[Function]}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              required={false}
              type="text"
            />
            <fieldset
              aria-hidden={true}
              className="PrivateNotchedOutline-root-7 MuiOutlinedInput-notchedOutline"
            >
              <legend
                className="PrivateNotchedOutline-legendLabelled-9"
              >
                <span>
                  Phone
                </span>
              </legend>
            </fieldset>
          </div>
          
        </div>
      </div>
      <div
        className="form-data__label"
      >
        <div
          className="MuiFormControl-root MuiTextField-root WithStyles(ForwardRef(TextField))-root-6"
        >
          <label
            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
            data-shrink={false}
            htmlFor="email"
            id="email-label"
          >
            Email
          </label>
          <div
            className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
            onClick={[Function]}
          >
            <input
              aria-invalid={false}
              autoFocus={false}
              className="MuiInputBase-input MuiOutlinedInput-input"
              data-testid="email"
              disabled={false}
              id="email"
              name="email"
              onAnimationStart={[Function]}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              required={false}
              type="text"
            />
            <fieldset
              aria-hidden={true}
              className="PrivateNotchedOutline-root-7 MuiOutlinedInput-notchedOutline"
            >
              <legend
                className="PrivateNotchedOutline-legendLabelled-9"
              >
                <span>
                  Email
                </span>
              </legend>
            </fieldset>
          </div>
          
        </div>
      </div>
      <div
        className="form-data__label"
      >
        <select
          className="form-data__label select-component "
          data-testid="gender"
          name="gender"
        >
          <option
            value=""
          >
            - SELECT ONE -
          </option>
          <option
            value="male"
          >
            Male
          </option>
          <option
            value="female"
          >
            Female
          </option>
          <option
            value="other"
          >
            Other
          </option>
        </select>
      </div>
      <div
        className="form-data__label"
      />
      <div
        className="form-data__submit submit"
      >
        <input
          className="submit__button"
          data-testid="submit"
          disabled={true}
          id="submit"
          type="submit"
          value="Submit"
        />
      </div>
    </form>
  </div>
</div>
`;
